import React, { useState, useEffect } from 'react';
import {
  FileText,
  Download,
  Brain,
  Plus,
  History,
  Search,
  Trash2,
  Edit
} from 'lucide-react';
import { sampleAIReports } from '../data/intelligenceData';

interface ProfileData {
  fullName: string;
  email: string;
  phone: string;
  linkedinProfile: string;
  country: string;
  language: string;
  currentOccupation: string;
  yearsExperience: string;
  entrepreneurialExperience: string;
  industryExpertise: string;
  marketExpertise: string;
  keySkills: string;
  company: string;
  companyLinkedin: string;
  companyType: string;
  industryFocus: string;
  origin: string;
  companySize: string;
  portfolioSize: string;
  headquarters: string;
  operatingMarkets: string;
  targetClients: string;
  keyCapabilities: string;
}

interface AIReportDevelopmentProps {
  isAICompanionOpen: boolean;
  aiCompanionWidth: number;
  toggleAICompanion: () => void;
  selectedRole: 'founder' | 'investor' | 'expert';
  profileData: ProfileData;
}

function AIReportDevelopment({
  isAICompanionOpen,
  aiCompanionWidth,
  toggleAICompanion,
  selectedRole,
  profileData
}: AIReportDevelopmentProps) {
  const [activeAIReportTab, setActiveAIReportTab] = useState('generate-report');
  const [reportParameters, setReportParameters] = useState({
    industry: '',
    market: '',
    topic: '',
    purpose: '',
    researchElements: ''
  });
  const [generatedReportContent, setGeneratedReportContent] = useState('');
  const [selectedReportId, setSelectedReportId] = useState<string | null>(null);

  // Scroll to top when component mounts
  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);

  const aiReportsTabs = [
    { id: 'generate-report', label: 'Generate AI Report', icon: Plus },
    { id: 'reports-history', label: 'Reports history', icon: History }
  ];

  const handleParameterChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setReportParameters(prev => ({ ...prev, [name]: value }));
  };

  const handleGenerateReport = () => {
    // Simulate AI report generation
    const newReportContent = `## AI Generated Report: ${reportParameters.topic} in ${reportParameters.market} (${reportParameters.industry})

### Introduction
This report provides a comprehensive analysis of the ${reportParameters.topic} within the ${reportParameters.industry} sector in the ${reportParameters.market} market, tailored for ${reportParameters.purpose}.

### Key Findings
*   **Market Overview:** The ${reportParameters.market} ${reportParameters.industry} market is experiencing significant growth, driven by [specific factors].
*   **Competitive Landscape:** Key players include [Company A], [Company B], and [Company C], with emerging startups [Startup X] and [Startup Y] disrupting the space.
*   **Trends & Opportunities:** Emerging trends such as [Trend 1] and [Trend 2] present unique opportunities for innovation and investment.
*   **Challenges & Risks:** Potential challenges include [Challenge 1] and [Challenge 2], which require strategic mitigation.

### Detailed Analysis
[Detailed analysis based on research elements: ${reportParameters.researchElements}. This section would typically include data visualizations, in-depth market segmentation, and stakeholder analysis.]

### Recommendations
Based on the analysis, we recommend [Recommendation 1] and [Recommendation 2] to capitalize on identified opportunities and mitigate risks.

### Conclusion
The ${reportParameters.industry} market in ${reportParameters.market} is dynamic and ripe with potential for those who can navigate its complexities effectively.

---
*Generated by Venture Weavers AI on ${new Date().toLocaleDateString()}*
`;
    setGeneratedReportContent(newReportContent);
    // In a real app, you'd save this report to a database
    // For demo, we'll just display it and add to sampleAIReports if needed
  };

  const handleExportReport = () => {
    const blob = new Blob([generatedReportContent], { type: 'text/markdown' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${reportParameters.topic.replace(/\s/g, '-')}-report.md`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const handleViewReport = (reportId: string) => {
    const report = sampleAIReports.find(r => r.id === reportId);
    if (report) {
      setGeneratedReportContent(report.content);
      setReportParameters(report.parameters);
      setSelectedReportId(reportId);
      setActiveAIReportTab('generate-report'); // Switch to generate tab to show content
    }
  };

  const handleDeleteReport = (reportId: string) => {
    // In a real app, this would delete from the database
    console.log(`Deleting report: ${reportId}`);
    // For demo, we'd filter it out from sampleAIReports if it were mutable state
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-white mb-2">AI Report Development</h1>
          <p className="text-white/80">Generate custom market research and competitive intelligence reports</p>
        </div>

        {/* AI Reports Tabs */}
        <div className="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl overflow-hidden mb-8">
          <div className="border-b border-white/20">
            <div className="flex">
              {aiReportsTabs.map((tab) => {
                const IconComponent = tab.icon;
                return (
                  <button
                    key={tab.id}
                    onClick={() => setActiveAIReportTab(tab.id)}
                    className={`flex-1 flex items-center justify-center space-x-2 px-6 py-4 font-medium transition-colors ${
                      activeAIReportTab === tab.id
                        ? 'bg-white/10 text-white border-b-2 border-purple-300'
                        : 'text-white/70 hover:text-white hover:bg-white/5'
                    }`}
                  >
                    <IconComponent className="h-4 w-4" />
                    <span>{tab.label}</span>
                  </button>
                );
              })}
            </div>
          </div>

          <div className="p-8">
            {/* Generate AI Report Section */}
            {activeAIReportTab === 'generate-report' && (
              <div className="space-y-6">
                <h2 className="text-2xl font-bold text-white mb-4">Generate New Report</h2>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <label className="block text-white/70 text-sm mb-2">Industry</label>
                    <select
                      name="industry"
                      value={reportParameters.industry}
                      onChange={handleParameterChange}
                      className="w-full bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white focus:outline-none focus:ring-2 focus:ring-purple-500"
                    >
                      <option value="" className="bg-slate-800">Select Industry</option>
                      <option value="Fintech" className="bg-slate-800">Fintech</option>
                      <option value="Healthtech" className="bg-slate-800">Healthtech</option>
                      <option value="E-commerce" className="bg-slate-800">E-commerce</option>
                      <option value="Edtech" className="bg-slate-800">Edtech</option>
                    </select>
                  </div>
                  <div>
                    <label className="block text-white/70 text-sm mb-2">Market</label>
                    <select
                      name="market"
                      value={reportParameters.market}
                      onChange={handleParameterChange}
                      className="w-full bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white focus:outline-none focus:ring-2 focus:ring-purple-500"
                    >
                      <option value="" className="bg-slate-800">Select Market</option>
                      <option value="UAE" className="bg-slate-800">UAE</option>
                      <option value="MENA" className="bg-slate-800">MENA Region</option>
                      <option value="Saudi Arabia" className="bg-slate-800">Saudi Arabia</option>
                      <option value="Egypt" className="bg-slate-800">Egypt</option>
                    </select>
                  </div>
                  <div>
                    <label className="block text-white/70 text-sm mb-2">Topic</label>
                    <input
                      type="text"
                      name="topic"
                      value={reportParameters.topic}
                      onChange={handleParameterChange}
                      placeholder="e.g., Market Trends, Competitive Analysis"
                      className="w-full bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-purple-500"
                    />
                  </div>
                  <div>
                    <label className="block text-white/70 text-sm mb-2">Purpose</label>
                    <input
                      type="text"
                      name="purpose"
                      value={reportParameters.purpose}
                      onChange={handleParameterChange}
                      placeholder="e.g., Investment Opportunity Identification"
                      className="w-full bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-purple-500"
                    />
                  </div>
                  <div className="md:col-span-2">
                    <label className="block text-white/70 text-sm mb-2">Key Research Elements</label>
                    <textarea
                      name="researchElements"
                      value={reportParameters.researchElements}
                      onChange={handleParameterChange}
                      rows={3}
                      placeholder="e.g., Market size, growth drivers, regulatory environment, key players, emerging technologies"
                      className="w-full bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-purple-500 resize-none"
                    />
                  </div>
                </div>
                <button
                  onClick={handleGenerateReport}
                  className="bg-gradient-to-r from-purple-500 to-blue-500 text-white px-6 py-3 rounded-lg font-semibold hover:from-purple-600 hover:to-blue-600 transition-all duration-300"
                >
                  Generate Report
                </button>

                {generatedReportContent && (
                  <div className="mt-8 bg-white/5 rounded-lg p-6 border border-white/20">
                    <h3 className="text-xl font-bold text-white mb-4">Generated Report</h3>
                    <div className="prose prose-invert max-w-none text-white/80">
                      {/* Render markdown content - for a real app, use a markdown renderer */}
                      <pre className="whitespace-pre-wrap font-sans text-sm">
                        {generatedReportContent}
                      </pre>
                    </div>
                    <button
                      onClick={handleExportReport}
                      className="mt-6 bg-green-500 hover:bg-green-600 text-white px-6 py-3 rounded-lg font-semibold transition-all duration-300 flex items-center space-x-2"
                    >
                      <Download className="h-5 w-5" />
                      <span>Export Report</span>
                    </button>
                  </div>
                )}
              </div>
            )}

            {/* Reports History Section */}
            {activeAIReportTab === 'reports-history' && (
              <div className="space-y-6">
                <h2 className="text-2xl font-bold text-white mb-4">Reports History</h2>
                {sampleAIReports.length === 0 ? (
                  <div className="text-center py-12">
                    <History className="h-16 w-16 text-white/40 mx-auto mb-4" />
                    <h3 className="text-white font-semibold text-xl mb-2">No reports generated yet</h3>
                    <p className="text-white/70">Generate your first AI report to see it here.</p>
                  </div>
                ) : (
                  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    {sampleAIReports.map((report) => (
                      <div key={report.id} className="bg-white/5 rounded-lg p-6 border border-white/20">
                        <h3 className="text-white font-semibold text-lg mb-2">{report.title}</h3>
                        <p className="text-white/70 text-sm mb-4">Generated on {report.date.toLocaleDateString()}</p>
                        <div className="flex items-center space-x-3">
                          <button
                            onClick={() => handleViewReport(report.id)}
                            className="bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors flex items-center space-x-2"
                          >
                            <FileText className="h-4 w-4" />
                            <span>View Report</span>
                          </button>
                          <button
                            onClick={() => handleDeleteReport(report.id)}
                            className="bg-red-500/20 text-red-300 hover:bg-red-500/30 px-4 py-2 rounded-lg text-sm font-medium transition-colors flex items-center space-x-2"
                          >
                            <Trash2 className="h-4 w-4" />
                            <span>Delete</span>
                          </button>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}

export default AIReportDevelopment;